"use strict";exports.id=844,exports.ids=[844],exports.modules={3465:(e,t,r)=>{r.r(t),r.d(t,{createOrReadKeyless:()=>p,removeKeyless:()=>k,safeParseClerkFile:()=>y});var c=r(4922),l=r(54),n=r(181);let i=".clerk",s="clerk.lock",a=(...e)=>{let t=(0,l.t$)(),r=(0,l.t0)();return t.join(r(),i,...e)},u=".tmp",o=()=>a(u,"keyless.json"),d=()=>a(u,"README.md"),f=!1;function y(){let{readFileSync:e}=(0,l.ur)();try{let t;let r=o();try{t=e(r,{encoding:"utf-8"})||"{}"}catch{t="{}"}return JSON.parse(t)}catch{return}}let h=()=>{let{writeFileSync:e}=(0,l.ur)();f=!0,e(s,"This file can be deleted. Please delete this file and refresh your application",{encoding:"utf8",mode:"0777",flag:"w"})},g=()=>{let{rmSync:e}=(0,l.ur)();try{e(s,{force:!0,recursive:!0})}catch{}f=!1},m=()=>{let{existsSync:e}=(0,l.ur)();return f||e(s)};async function p(){let{writeFileSync:e,mkdirSync:t}=(0,l.ur)();if(m())return null;h();let r=o(),s=d();t(a(u),{recursive:!0}),function(){let{existsSync:e,writeFileSync:t,readFileSync:r,appendFileSync:c}=(0,l.ur)(),n=(0,l.t$)(),s=(0,l.t0)(),a=n.join(s(),".gitignore");e(a)||t(a,""),r(a,"utf-8").includes(i+"/")||c(a,`
# clerk configuration (can include secrets)
/${i}/
`)}();let f=y();if((null==f?void 0:f.publishableKey)&&(null==f?void 0:f.secretKey))return g(),f;let p=(0,c.f)({}),k=await (0,n.collectKeylessMetadata)().then(n.formatMetadataHeaders).catch(()=>new Headers),v=await p.__experimental_accountlessApplications.createAccountlessApplication({requestHeaders:k}).catch(()=>null);return v&&(e(r,JSON.stringify(v),{encoding:"utf8",mode:"0777",flag:"w"}),e(s,`
## DO NOT COMMIT
This directory is auto-generated from \`@clerk/nextjs\` because you are running in Keyless mode. Avoid committing the \`.clerk/\` directory as it includes the secret key of the unclaimed instance.
  `,{encoding:"utf8",mode:"0777",flag:"w"})),g(),v}function k(){let{rmSync:e}=(0,l.ur)();if(!m()){h();try{e(a(),{force:!0,recursive:!0})}catch{}g()}}}};