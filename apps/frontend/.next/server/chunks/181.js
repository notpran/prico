"use strict";exports.id=181,exports.ids=[181],exports.modules={54:(e,t,r)=>{let l,s;r.d(t,{t0:()=>u,ur:()=>a,t$:()=>c});var n=Object.getOwnPropertyNames;let i=(l={"src/runtime/node/safe-node-apis.js"(e,t){let{existsSync:l,writeFileSync:s,readFileSync:n,appendFileSync:i,mkdirSync:o,rmSync:a}=r(7561),c=r(9411);t.exports={fs:{existsSync:l,writeFileSync:s,readFileSync:n,appendFileSync:i,mkdirSync:o,rmSync:a},path:c,cwd:()=>process.cwd()}}},function(){return s||(0,l[n(l)[0]])((s={exports:{}}).exports,s),s.exports})();function o(e,t){if(!e)throw Error(`Clerk: ${t} is missing. This is an internal error. Please contact Clerk's support.`)}let a=()=>(o(i.fs,"fs"),i.fs),c=()=>(o(i.path,"path"),i.path),u=()=>(o(i.cwd,"cwd"),i.cwd)},2181:(e,t,r)=>{r.r(t),r.d(t,{detectKeylessEnvDrift:()=>o});var l=r(2087),s=r(4922),n=r(54);let i="KEYLESS_ENV_DRIFT_DETECTED";async function o(){var e,t;if(l.h&&"undefined"==typeof window)try{let{safeParseClerkFile:o}=await r.e(844).then(r.bind(r,3465)),a=o();if(!a)return;let c=process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,u=process.env.CLERK_SECRET_KEY,d=!!(c||u),p=!!((null==a?void 0:a.publishableKey)&&(null==a?void 0:a.secretKey)),y=!c&&!u;if(!d&&!p||y&&p||!p||!d)return;let f=!!(c&&a.publishableKey&&c===a.publishableKey),K=!!(u&&a.secretKey&&u===a.secretKey);if(!(c&&a.publishableKey&&!f||u&&a.secretKey&&!K))return;let b={publicKeyMatch:f,secretKeyMatch:K,envVarsMissing:y,keylessFileHasKeys:p,keylessPublishableKey:null!=(e=a.publishableKey)?e:"",envPublishableKey:null!=c?c:""},h=(0,s.f)({publishableKey:a.publishableKey,secretKey:a.secretKey,telemetry:{samplingRate:1}});(function(){try{if(!l.h)return!1;{let{mkdirSync:e,writeFileSync:t}=(0,n.ur)(),r=(0,n.t$)(),l=(0,n.t$)().join(process.cwd(),".clerk/.tmp/telemetry.json"),s=r.dirname(l);e(s,{recursive:!0});let o={firedAt:new Date().toISOString(),event:i};return t(l,JSON.stringify(o,null,2),{flag:"wx"}),!0}}catch(e){if((null==e?void 0:e.code)==="EEXIST")return!1;return console.warn("Failed to create telemetry flag file:",e),!1}})()&&(null==(t=h.telemetry)||t.record({event:i,eventSamplingRate:1,payload:b}))}catch(e){console.warn("Failed to detect keyless environment drift:",e)}}}};