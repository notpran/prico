"use strict";exports.id=465,exports.ids=[465,844],exports.modules={54:(e,t,r)=>{let s,n;r.d(t,{t0:()=>u,ur:()=>a,t$:()=>o});var c=Object.getOwnPropertyNames;let i=(s={"src/runtime/node/safe-node-apis.js"(e,t){let{existsSync:s,writeFileSync:n,readFileSync:c,appendFileSync:i,mkdirSync:l,rmSync:a}=r(7561),o=r(9411);t.exports={fs:{existsSync:s,writeFileSync:n,readFileSync:c,appendFileSync:i,mkdirSync:l,rmSync:a},path:o,cwd:()=>process.cwd()}}},function(){return n||(0,s[c(s)[0]])((n={exports:{}}).exports,n),n.exports})();function l(e,t){if(!e)throw Error(`Clerk: ${t} is missing. This is an internal error. Please contact Clerk's support.`)}let a=()=>(l(i.fs,"fs"),i.fs),o=()=>(l(i.path,"path"),i.path),u=()=>(l(i.cwd,"cwd"),i.cwd)},3465:(e,t,r)=>{r.r(t),r.d(t,{createOrReadKeyless:()=>g,removeKeyless:()=>w,safeParseClerkFile:()=>p});var s=r(4922),n=r(54),c=r(181);let i=".clerk",l="clerk.lock",a=(...e)=>{let t=(0,n.t$)(),r=(0,n.t0)();return t.join(r(),i,...e)},o=".tmp",u=()=>a(o,"keyless.json"),d=()=>a(o,"README.md"),f=!1;function p(){let{readFileSync:e}=(0,n.ur)();try{let t;let r=u();try{t=e(r,{encoding:"utf-8"})||"{}"}catch{t="{}"}return JSON.parse(t)}catch{return}}let h=()=>{let{writeFileSync:e}=(0,n.ur)();f=!0,e(l,"This file can be deleted. Please delete this file and refresh your application",{encoding:"utf8",mode:"0777",flag:"w"})},y=()=>{let{rmSync:e}=(0,n.ur)();try{e(l,{force:!0,recursive:!0})}catch{}f=!1},m=()=>{let{existsSync:e}=(0,n.ur)();return f||e(l)};async function g(){let{writeFileSync:e,mkdirSync:t}=(0,n.ur)();if(m())return null;h();let r=u(),l=d();t(a(o),{recursive:!0}),function(){let{existsSync:e,writeFileSync:t,readFileSync:r,appendFileSync:s}=(0,n.ur)(),c=(0,n.t$)(),l=(0,n.t0)(),a=c.join(l(),".gitignore");e(a)||t(a,""),r(a,"utf-8").includes(i+"/")||s(a,`
# clerk configuration (can include secrets)
/${i}/
`)}();let f=p();if((null==f?void 0:f.publishableKey)&&(null==f?void 0:f.secretKey))return y(),f;let g=(0,s.f)({}),w=await (0,c.collectKeylessMetadata)().then(c.formatMetadataHeaders).catch(()=>new Headers),k=await g.__experimental_accountlessApplications.createAccountlessApplication({requestHeaders:w}).catch(()=>null);return k&&(e(r,JSON.stringify(k),{encoding:"utf8",mode:"0777",flag:"w"}),e(l,`
## DO NOT COMMIT
This directory is auto-generated from \`@clerk/nextjs\` because you are running in Keyless mode. Avoid committing the \`.clerk/\` directory as it includes the secret key of the unclaimed instance.
  `,{encoding:"utf8",mode:"0777",flag:"w"})),y(),k}function w(){let{rmSync:e}=(0,n.ur)();if(!m()){h();try{e(a(),{force:!0,recursive:!0})}catch{}y()}}}};