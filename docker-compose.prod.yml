version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - NEXT_PUBLIC_SOCKET_URL=${NEXT_PUBLIC_SOCKET_URL}
      - REDIS_URL=${REDIS_URL}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - API_KEY=${API_KEY}
    depends_on:
      - redis
      - socket-server
    restart: unless-stopped

  socket-server:
    build:
      context: ./server/socket-server
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - SOCKET_SECRET=${SOCKET_SECRET}
    depends_on:
      - redis
    restart: unless-stopped

  y-websocket:
    build:
      context: ./server/y-websocket
      dockerfile: Dockerfile
    ports:
      - "1234:1234"
    restart: unless-stopped

  git-service:
    build:
      context: ./server/git-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - REPO_BASE_PATH=/app/repos
    volumes:
      - git-repos:/app/repos
    restart: unless-stopped

  runner:
    build:
      context: ./server/runner
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped

  mongo:
    image: mongo:7
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped

volumes:
  redis-data:
  mongo-data:
  git-repos: